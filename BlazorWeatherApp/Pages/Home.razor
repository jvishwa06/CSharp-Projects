@page "/"
@inject NavigationManager Navigation
@inject HttpClient Http
@inject AuthService AuthService

<PageTitle>Home</PageTitle>

<h1 class="title">Welcome to Weather Forecast Application</h1>

<p class="description">
  This Weather Forecast Application allows users to get real-time weather updates for any city of their choice. Simply enter the name of the city, and the application will display the current temperature, humidity, and atmospheric pressure.🧭⚡
</p>

<div class="login-section">
    @if (!AuthService.IsAuthenticated)
    {
        <!-- Login form -->
        <div class="form-container">
            <h3 class="form-title">Login to Your Account</h3>
            <div class="form-group">
                <label>Username:</label>
                <input @bind="username" class="form-input" />
            </div>
            <div class="form-group">
                <label>Password:</label>
                <input @bind="password" type="password" class="form-input" />
            </div>
            <div class="form-actions">
                <button class="btn btn-primary" @onclick="Login">Login</button>
                <button class="btn btn-secondary" @onclick="Register">Register</button>
            </div>

            @if (!string.IsNullOrEmpty(message))
            {
                <p class="error-message">@message</p>
            }
        </div>
    }
    else
    {
        <h5>You are logged in! Go to the weather page:</h5>
        <button class="btn btn-primary" @onclick="NavigateToWeather">Weather Page</button>
    }
</div>

<style>
  /* Page-wide styles */
  .title {
    font-size: 36px;
    color: #007bff;
    text-align: center;
    margin-bottom: 20px;
    font-family: 'Montserrat', sans-serif;
  }

  .description {
    font-size: 18px;
    line-height: 1.6;
    color: #333;
    text-align: justify;
    margin-bottom: 15px;
    padding: 0 20px;
  }

  .login-section {
    max-width: 400px;
    margin: 30px auto;
    text-align: center;
  }

  .form-container {
    background-color: #fff;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
    margin-top: 20px;
  }

  .form-title {
    font-size: 24px;
    color: #333;
    margin-bottom: 20px;
  }

  .form-group {
    margin-bottom: 15px;
    text-align: left;
  }

  .form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: 600;
  }

  .form-input {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 4px;
  }

  .form-actions {
    margin-top: 20px;
  }

  .btn {
    padding: 10px 20px;
    font-size: 16px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    margin-right: 10px;
  }

  .btn-primary {
    background-color: #007bff;
    color: white;
  }

  .btn-primary:hover {
    background-color: #0056b3;
  }

  .btn-secondary {
    background-color: #6c757d;
    color: white;
  }

  .btn-secondary:hover {
    background-color: #5a6268;
  }

  .error-message {
    color: red;
    margin-top: 15px;
  }
</style>

@code {
    private string username;
    private string password;
    private string message;

    // Login Method
    private async Task Login()
    {
        var request = new { Username = username, Password = password };
        var response = await Http.PostAsJsonAsync("api/auth/login", request);

        if (response.IsSuccessStatusCode)
        {
            message = "Login successful!";
            AuthService.Login();  // Set authentication state to logged in
            StateHasChanged();    // Refresh UI
        }
        else
        {
            message = "Login failed: Invalid credentials.";
        }
    }

    // Register Method
    private async Task Register()
    {
        var request = new { Username = username, Password = password };
        var response = await Http.PostAsJsonAsync("api/auth/register", request);

        if (response.IsSuccessStatusCode)
        {
            message = "Registration successful!";
        }
        else
        {
            message = "Registration failed: Username already exists.";
        }
    }

    // Navigate to the Weather page
    private void NavigateToWeather()
    {
        Navigation.NavigateTo("/weather");
    }
}
